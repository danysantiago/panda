/**
 * Fake objects for testing and building. The Fakes also double as type
 * definitions for the request and response of each route.
 *
 * @author Samuel Rodriguez (samus250@gmail.com)
 */

/**
 * The fakes object. It contains an intput and an output object for each route.
 *
 * With the fakes we will build a very simple system. It will contain 2 users,
 * a student and a professor. There will be four courses in the system. These
 * were created by the professor and 3 of them are enrolled by the student.
 * One of the courses will have 3 assignments, two of them pending, and one of
 * them already completed by the student. One of the completed assignments will
 * be after the due date.
 *
 * Some of the routes will have extra objects, some of the extra objects might
 * be incomplete objects (some properties of the required type will be missing)
 *
 * Note: the _id fields are 24 character strings generated by MongoDB.
 */
var Fakes = {};
Fakes.professor = {
  'role': 'professor',
  'firstName': 'Pedro',
  'lastName': 'Rivera',
  'email': 'p.rivera@upr.edu',
  'repository': []
};

Fakes.student = {
  'role': 'student',
  'firstName': 'Samuel',
  'lastName': 'Rodriguez',
  'email': 'samuel.rodriguez8@upr.edu',
  'repository': [
    {'_id': 'ab324fe930940c203d38ed02'},
    {'path': 'http://pandagitlab/sytes.net/samuel.rodriguez8/ab324fe930940c203d38ed02'}
  ]
};
Fakes.users = [Fakes.professor, Fakes.student];

Fakes.assignment1 = {
  '_id': 'ab324fe930940c203d38ed02',
  'name': 'Assignment on Linked Lists',
  'description': 'Implement a dobly linked list',
  'totalScore': 100, 
  'deadline': 'November 15, 2013 23:55:00',
  'numOfTries': 2,
  'instructions': {
    'file': '/uploads/assignments/instructions/idHash}',
    'text': 'You have to implement a doubly linked list with the given classes.',
  },
  'testCases': [
    {
      'type': 'private',
      'score': 100,
      'timeLimit': 10,
      'memLimit': 500,
      'resource': {}
    }
  ]
};

Fakes.assignment2 = {
  '_id': '7728344fe317840c2eeed443',
  'name': 'Assignment on Priority Queue',
  'description': 'Implement a Priority Queue with a mean heap',
  'totalScore': 90, 
  'deadline': 'November 29, 2013 23:55:00',
  'numOfTries': 3,
  'instructions': {
    'file': '/uploads/assignments/instructions/7728344fe317840c2eeed443',
    'text': 'You have to implement a priority queue with your own min heap.',
  },
  'testCases': [
    {
      'type': 'private',
      'score': 90,
      'timeLimit': 5,
      'memLimit': 100,
      'resource': {}
    }
  ]
};

Fakes.assignment3 = {
  '_id': 'ffdead4fe17840c2eeedbeef',
  'name': 'Assignment on Graphs',
  'description': 'Implement an algorithm for finding an MST',
  'totalScore': 120, 
  'deadline': 'December 15, 2013 23:55:00',
  'numOfTries': 5,
  'instructions': {
    'file': '/uploads/assignments/instructions/ffdead4fe17840c2eeedbeef',
    'text': 'You have to implement an efficient MST algorithm for this.',
  },
  'testCases': [
    {
      'type': 'private',
      'score': 60,
      'timeLimit': 10,
      'memLimit': 500,
      'resource': {}
    },
    {
      'type': 'private',
      'score': 60,
      'timeLimit': 20,
      'memLimit': 1000,
      'resource': {}
    }
  ]
};

Fakes.assignment4 = {
  '_id': 'dead4fe930720c203d38beef',
  'name': 'Assignmnet on Dynamic Programming',
  'description': 'Implement a DP algorithm for solving the Knapsack problem',
  'totalScore': 50, 
  'deadline': 'December 22, 2013 23:55:00',
  'numOfTries': 1,
  'instructions': {
    'file': '/uploads/assignments/instructions/dead4fe930720c203d38beef',
    'text': 'You will have to implement a quick DP algorith for solving the problem',
  },
  'testCases': [
    {
      'type': 'private',
      'score': 50,
      'timeLimit': 2,
      'memLimit': 100,
      'resource': {}
    }
  ]
};
Fakes.assignments = [Fakes.assignment1, Fakes.assignment2, Fakes.assignment3,
    Fakes.assignment4];

Fakes.course1 = {
  'users': ['samuel.rodriguez8@upr.edu'],
  'assignments': [Fakes.assignment1._id, Fakes.assignment2._id,
    Fakes.assignment3._id, Fakes.assignment4._id],
  'code': 'ICOM4035',
  'name': 'Data Structures',
  'year': '2013',
  'semester': 'Fall',
  'grader': ['p.rivera@upr.edu']
};

Fakes.course2 = {
  'users': ['samuel.rodriguez8@upr.edu'],
  'assignments': [Fakes.assignment1._id],
  'code': 'ICOM4036',
  'name': 'Programming Languages',
  'year': '2013',
  'semester': 'Fall',
  'grader': ['p.rivera@upr.edu']
};

Fakes.course3 = {
  'users': ['samuel.rodriguez8@upr.edu'],
  'assignments': [Fakes.assignment1._id],
  'code': 'ICOM4009',
  'name': 'Software Engineering',
  'year': '2013',
  'semester': 'Fall',
  'grader': ['p.rivera@upr.edu']
};
Fakes.courses = [Fakes.course1, Fakes.course2, Fakes.course3];

Fakes.submission1 = {
  '_id': 'idHash...',
  'user._id': 'samuel.rodriguez8@upr.edu',
  'assignment._id': Fakes.assignment1._id,
  'grade': 100, 
  'commitHash': 'somehash',
  'date': 'September 15, 2013 15:23:45',
  'compileTime': 3,
  'runTime': 7,
  'elpasedTime': 8
};

Fakes.submission2 = {
  '_id': 'idHash...',
  'user._id': 'samuel.rodriguez8@upr.edu',
  'assignment._id': Fakes.assignment3._id,
  'grade': 120, 
  'commitHash': 'someHash',
  'date': 'October 31, 2013 15:15:14',
  'compileTime': 1,
  'runTime': 3,
  'elpasedTime': 3
};
/**
 * End of fake entities.
 */

/**
 * Begin of fake route objects.
 */
Fakes.getCourses = [
    {
      '_id': 'ICOM4009', 'name': 'Software Engineering',
      'assignments': [
        {
          'name': 'Assignment number one',
          'dueDate': 'October 23, 2014'
        },
        {
          'name': 'Assignment number two',
          'dueDate': 'October 25, 2015'
        }
      ]
    },
    {'id': 'ICOM4015', 'name': 'Advanced Programming'},
    {'id': 'ICOM4029', 'name': 'Compiler Construction'},
    {'id': 'ICOM4035', 'name': 'Data Structures'},
    {'id': 'ICOM5995', 'name': 'Design and Analysis of Algorithms (Pedrito Style)'},
    {'id': 'ICOM5995', 'name': 'Mi clase nueva pata.'}
];

Fakes.getUserCourses = [
  {
    'id': 'ICOM4009', 'name': 'Software Engineering',
    'assignments': [
      {
        'name': 'Assignment number one',
        'dueDate': 'October 23, 2014'
      },
      {
        'name': 'Assignment number two',
        'dueDate': 'October 25, 2015'
      }
    ]
  },
  {'id': 'ICOM4015', 'name': 'Advanced Programming'},
  {'id': 'ICOM4029', 'name': 'Compiler Construction'},
  {'id': 'ICOM4035', 'name': 'Data Structures'},
  {'id': 'ICOM5995', 'name': 'Design and Analysis of Algorithms (Pedrito Style)'},
  {'id': 'ICOM5995', 'name': 'Mi clase nueva pata.'}
];

/**
 * An array that contains the IDs of the assignments linked to a course.
 */
Fakes.getCourseAssignments = [
  {'id': 1},
  {'id': 2}
];

/**
 * An object that contains all the information of an assignment. Returned with
 * assignment Id.
 */
Fakes.getAssignment = {
  '_id': '000000000000000000000000',
  'name': 'Assignment for a course',
  'shortDescription': 'This assignment will test a student\'s knowledge on recursion',
  'totalScore': 100,
  'deadline': '2013-04-25 13:00:00',
  'numOfTries': 5,
  'instructions': {'file': 'http://localhost', 'text': 'instructions'}
};

module.exports = Fakes;